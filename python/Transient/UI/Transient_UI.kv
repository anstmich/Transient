#:kivy 1.5

# Color definitions
#:set MAIN_BG [0.064, 0.068, 0.068, 1.0]
#:set DARK_BG [0.13, 0.135, 0.135, 1.0]
#:set DARKER_BG [0.075, 0.08, 0.085, 1.0]
#:set HEADER_BG [0.16, 0.165, 0.165, 1.0]
#:set AXES_BG [0.1, 0.105, 0.105, 1]
#:set OUTLINE [0.175,0.175,0.175,1.0]

# Font definitions
#:set DAQ_WIDGET_HEADER_PX 16
#:set NUM_DISP_UNITS_PX 24

# Geometry Size Definitions
#:set HEADER_PADDING 5
#:set HEADER_HEIGHT 26
#:set PADDING 5.0

<MyWidget>:
	canvas:
		Color:
			rgba: 1,0,0,1.0
		Rectangle:
			pos: self.pos
			size: self.size
<EmphScreen>:
	canvas:
		Color:
			rgba: 0,0,0,0.5
		Rectangle:
			pos: self.pos
			size: self.size
<Container>:
	canvas:
		Color: 
			rgba: MAIN_BG
		Rectangle:
			pos: self.pos
			size: self.size
<DAQWidget>:
	header_text: '[color=#adaeaf]DAQWidget Default Header[/color]'
	canvas:
		Color:
			rgba: [0,0,0,0.2]
		Rectangle:
			pos: [self.pos[0] - 2, self.pos[1] - 2]
			size: [self.size[0] + 4, self.size[1] + 4]
		Color:
			rgba: OUTLINE
		Rectangle:
			pos: [self.pos[0] - 1, self.pos[1] - 1]
			size: [self.size[0] + 2, self.size[1] + 2]
		Color:
			rgba: DARK_BG
		Rectangle:
			pos: self.pos
			size: self.size
		Color:
			rgba: HEADER_BG
		Rectangle:
			pos: self.pos[0], self.pos[1] + self.height - 24
			size: self.width, 24
			texture: self.gradient
		Color:
			rgba: 0,0,0,0.8
		Line:
			points: int(self.pos[0]), int(self.pos[1]+self.height-HEADER_HEIGHT), int(self.pos[0] + self.width), int(self.pos[1]+self.height-HEADER_HEIGHT)
			width: 1
		Color:
			rgba: 1,1,1,0.075
		Line:
			points: int(self.pos[0]), int(self.pos[1]+self.height-HEADER_HEIGHT-1), int(self.pos[0] + self.width), int(self.pos[1]+self.height-HEADER_HEIGHT-1)
			width: 1
		
		
	Label:
		id: header_label
		font_size: DAQ_WIDGET_HEADER_PX
		pos: root.pos[0], root.size[1] + root.pos[1] - DAQ_WIDGET_HEADER_PX - HEADER_PADDING
		text: root.header_text
		markup: True
		size: root.width, DAQ_WIDGET_HEADER_PX
		halign: 'left'


<NumericalDisplay>:
	number_text: 'NAN'
	units: 'NoneUnits'
	Label:
		id: units_label
		font_size: NUM_DISP_UNITS_PX
		text: root.units
		height: NUM_DISP_UNITS_PX
		pos: (root.width - self.width)/2.0 + root.x, root.y + 5*PADDING
	Label:
		id: number_label
		text: root.number_text
		font_size: root.width/(root.digits) if root.width < root.height else root.height/(root.digits)
		#text_size: root.width - 2*PADDING, root.height - 2*PADDING - HEADER_HEIGHT
		center_x: root.x + root.width/2.0
		center_y: root.y + root.height/2.0

<PositionTracker>:
	canvas:
		Color:
			rgba: 0,0,0,0.5
		Rectangle:
			pos: self.x+3, self.y + 3
			size: self.width - 6, self.height - HEADER_HEIGHT - 6
		Color:
			rgba: DARKER_BG
		Rectangle:
			pos: self.x+5, self.y + 5
			size: self.width - 10, self.height - HEADER_HEIGHT - 10
<Ball>
	canvas:
		Color:
			rgba: self.color
		Ellipse:
			pos: self.pos
			size: self.size

<PointDisplay>:
	x_label: 'NAN'
	y_label: 'NAN'
	label: point_label
	Label:
		id: point_label
		text: ''.join([root.x_label, ', ', root.y_label])
		font_size: 10
		pos: root.pos
		size: self.texture_size

<Plot>
	canvas:
		Color:
			rgba: 0,0,0,0.5

